{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":73290,"databundleVersionId":8710574,"sourceType":"competition"}],"dockerImageVersionId":30732,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-06-30T13:09:14.993396Z","iopub.execute_input":"2024-06-30T13:09:14.993785Z","iopub.status.idle":"2024-06-30T13:09:16.111004Z","shell.execute_reply.started":"2024-06-30T13:09:14.993753Z","shell.execute_reply":"2024-06-30T13:09:16.109627Z"},"trusted":true},"execution_count":1,"outputs":[{"name":"stdout","text":"/kaggle/input/playground-series-s4e6/sample_submission.csv\n/kaggle/input/playground-series-s4e6/train.csv\n/kaggle/input/playground-series-s4e6/test.csv\n","output_type":"stream"}]},{"cell_type":"code","source":"!rm -rf /kaggle/working/*","metadata":{"execution":{"iopub.status.busy":"2024-06-30T13:09:16.113582Z","iopub.execute_input":"2024-06-30T13:09:16.114074Z","iopub.status.idle":"2024-06-30T13:09:17.183216Z","shell.execute_reply.started":"2024-06-30T13:09:16.114041Z","shell.execute_reply":"2024-06-30T13:09:17.181449Z"},"trusted":true},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":"## Pre-process data","metadata":{}},{"cell_type":"markdown","source":"Adding some improvements","metadata":{}},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler, LabelEncoder\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.model_selection import train_test_split, GridSearchCV\nfrom sklearn.metrics import classification_report, confusion_matrix\nimport joblib\nimport pandas as pd\n\n# Load the training data\ntrain_file_path = '/kaggle/input/playground-series-s4e6/train.csv'\ntrain_data = pd.read_csv(train_file_path)\n\n# Preprocess the training data\nnumerical_features = [\n    'Previous qualification (grade)',\n    'Curricular units 1st sem (grade)',\n    'Curricular units 2nd sem (grade)',\n    'Unemployment rate',\n    'Inflation rate',\n    'GDP'\n]\nscaler = StandardScaler()\ntrain_data[numerical_features] = scaler.fit_transform(train_data[numerical_features])\n\ncategorical_features = [\n    'Marital status',\n    'Application mode',\n    'Course',\n    'Daytime/evening attendance',\n    'Nacionality',\n    'Mother\\'s qualification',\n    'Father\\'s qualification',\n    'Mother\\'s occupation',\n    'Father\\'s occupation',\n    'Displaced',\n    'Educational special needs',\n    'Debtor',\n    'Tuition fees up to date',\n    'Gender',\n    'Scholarship holder',\n    'International'\n]\nlabel_encoder = LabelEncoder()\nfor feature in categorical_features:\n    train_data[feature] = label_encoder.fit_transform(train_data[feature])\n\n# Encode the target variable\ntarget_encoder = LabelEncoder()\ntrain_data['Target'] = target_encoder.fit_transform(train_data['Target'])\n\n# Prepare data for training\nX = train_data.drop(columns=['Target', 'id'])  # Drop the 'Target' and 'id' columns\ny = train_data['Target']\n\n# Split the data into training and validation sets\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n\n# Hyperparameter tuning using GridSearchCV\nparam_grid = {\n    'n_estimators': [100, 200, 300],\n    'max_depth': [10, 20, 30],\n    'min_samples_split': [2, 5, 10],\n    'min_samples_leaf': [1, 2, 4]\n}\n\ngrid_search = GridSearchCV(estimator=RandomForestClassifier(random_state=42),\n                           param_grid=param_grid,\n                           cv=3,\n                           n_jobs=-1,\n                           verbose=2)\n\ngrid_search.fit(X_train, y_train)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T13:09:17.185860Z","iopub.execute_input":"2024-06-30T13:09:17.186388Z","iopub.status.idle":"2024-06-30T13:33:21.148078Z","shell.execute_reply.started":"2024-06-30T13:09:17.186338Z","shell.execute_reply":"2024-06-30T13:33:21.146833Z"},"trusted":true},"execution_count":3,"outputs":[{"name":"stdout","text":"Fitting 3 folds for each of 81 candidates, totalling 243 fits\n","output_type":"stream"},{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"GridSearchCV(cv=3, estimator=RandomForestClassifier(random_state=42), n_jobs=-1,\n             param_grid={'max_depth': [10, 20, 30],\n                         'min_samples_leaf': [1, 2, 4],\n                         'min_samples_split': [2, 5, 10],\n                         'n_estimators': [100, 200, 300]},\n             verbose=2)","text/html":"<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=3, estimator=RandomForestClassifier(random_state=42), n_jobs=-1,\n             param_grid={&#x27;max_depth&#x27;: [10, 20, 30],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n                         &#x27;n_estimators&#x27;: [100, 200, 300]},\n             verbose=2)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" ><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=3, estimator=RandomForestClassifier(random_state=42), n_jobs=-1,\n             param_grid={&#x27;max_depth&#x27;: [10, 20, 30],\n                         &#x27;min_samples_leaf&#x27;: [1, 2, 4],\n                         &#x27;min_samples_split&#x27;: [2, 5, 10],\n                         &#x27;n_estimators&#x27;: [100, 200, 300]},\n             verbose=2)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" ><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" ><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier(random_state=42)</pre></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Train and Evaluate the model","metadata":{}},{"cell_type":"code","source":"# Train the best model found by GridSearchCV\nbest_model = grid_search.best_estimator_\nbest_model.fit(X_train, y_train)\n\n# Evaluate the model performance on the validation data\ny_val_pred = best_model.predict(X_val)\nclassification_report_rf = classification_report(y_val, y_val_pred)\nconfusion_matrix_rf = confusion_matrix(y_val, y_val_pred)\n\n# Print the evaluation results\nprint('Classification Report for Random Forest (Validation Set):\\n')\nprint(classification_report_rf)\nprint('\\nConfusion Matrix for Random Forest (Validation Set):\\n')\nprint(confusion_matrix_rf)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T13:33:21.151943Z","iopub.execute_input":"2024-06-30T13:33:21.152314Z","iopub.status.idle":"2024-06-30T13:33:50.409611Z","shell.execute_reply.started":"2024-06-30T13:33:21.152278Z","shell.execute_reply":"2024-06-30T13:33:50.408579Z"},"trusted":true},"execution_count":4,"outputs":[{"name":"stdout","text":"Classification Report for Random Forest (Validation Set):\n\n              precision    recall  f1-score   support\n\n           0       0.90      0.82      0.86      5028\n           1       0.65      0.60      0.62      3017\n           2       0.85      0.93      0.89      7259\n\n    accuracy                           0.83     15304\n   macro avg       0.80      0.78      0.79     15304\nweighted avg       0.83      0.83      0.83     15304\n\n\nConfusion Matrix for Random Forest (Validation Set):\n\n[[4143  550  335]\n [ 330 1815  872]\n [ 105  434 6720]]\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Save the Model","metadata":{}},{"cell_type":"code","source":"# Save the trained model and label encoder\nmodel_path = 'random_forest_model.pkl'\nencoder_path = 'target_encoder.pkl'\njoblib.dump(best_model, model_path)\njoblib.dump(target_encoder, encoder_path)","metadata":{"execution":{"iopub.status.busy":"2024-06-30T13:33:50.411106Z","iopub.execute_input":"2024-06-30T13:33:50.411498Z","iopub.status.idle":"2024-06-30T13:33:50.677174Z","shell.execute_reply.started":"2024-06-30T13:33:50.411467Z","shell.execute_reply":"2024-06-30T13:33:50.675884Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"['target_encoder.pkl']"},"metadata":{}}]},{"cell_type":"markdown","source":"## Load the test dataset, run the model and save the submission file","metadata":{}},{"cell_type":"code","source":"# Load the test data\ntest_file_path = '/kaggle/input/playground-series-s4e6/test.csv'\ntest_data = pd.read_csv(test_file_path)\n\n# Save the 'id' column for later use\nids = test_data['id']\n\n# Preprocess the test data\ntest_data[numerical_features] = scaler.transform(test_data[numerical_features])\nfor feature in categorical_features:\n    test_data[feature] = label_encoder.fit_transform(test_data[feature])\n\n# Prepare test data for predictions, exclude 'id' column\nX_test = test_data.drop(columns=['id'])\n\n# Load the trained model and label encoder\nbest_model = joblib.load(model_path)\ntarget_encoder = joblib.load(encoder_path)\n\n# Make predictions on the test data\ny_test_pred = best_model.predict(X_test)\n\n# Map the encoded predictions back to their original labels\npredicted_labels = target_encoder.inverse_transform(y_test_pred)\n\n# Create the output DataFrame\noutput = pd.DataFrame({'id': ids, 'Target': predicted_labels})\n\n# Print the output DataFrame\nprint('Output DataFrame:\\n')\nprint(output.head())\n\n# Save the output to a CSV file\noutput_file_path = 'submission-2.csv'\noutput.to_csv(output_file_path, index=False)\n\nprint(f'\\nPredictions have been saved to {output_file_path}')","metadata":{"execution":{"iopub.status.busy":"2024-06-30T13:33:50.678773Z","iopub.execute_input":"2024-06-30T13:33:50.679231Z","iopub.status.idle":"2024-06-30T13:33:54.205248Z","shell.execute_reply.started":"2024-06-30T13:33:50.679191Z","shell.execute_reply":"2024-06-30T13:33:54.203960Z"},"trusted":true},"execution_count":6,"outputs":[{"name":"stdout","text":"Output DataFrame:\n\n      id    Target\n0  76518   Dropout\n1  76519  Graduate\n2  76520  Graduate\n3  76521  Graduate\n4  76522  Enrolled\n\nPredictions have been saved to submission-2.csv\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=   8.6s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  17.1s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=   8.9s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=   8.4s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  16.7s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  24.6s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  16.7s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  24.2s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  25.0s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=   8.0s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  16.7s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  25.3s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  24.1s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   8.7s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  16.0s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  24.3s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  24.8s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=   8.1s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  16.7s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  24.1s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  27.2s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  45.3s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  40.3s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=  12.9s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  25.7s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  38.5s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  40.1s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=  13.0s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  26.2s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  38.3s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  37.7s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=  11.9s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  24.2s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  36.1s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  24.6s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=  12.0s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=  12.3s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  24.3s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  36.0s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  28.1s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=  14.6s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=  13.7s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  28.2s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  41.9s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  26.9s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=  14.1s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=  13.5s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  27.6s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  40.8s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  27.5s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=  12.9s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=  13.7s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  26.6s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  39.1s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  25.1s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=  12.4s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=  12.5s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  25.4s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  37.4s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  24.5s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  17.1s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  25.5s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  16.9s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  25.6s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  25.3s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   8.3s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  16.5s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  24.8s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  17.2s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=   8.3s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=   8.6s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  16.5s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  25.3s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  25.3s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=   8.4s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  16.3s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=   8.5s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=   8.1s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  16.4s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  24.7s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  27.7s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  43.8s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  26.9s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=  12.8s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=  12.6s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  26.8s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  39.4s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  26.9s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=  13.1s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=  13.6s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  26.0s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  39.6s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  25.0s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=  12.4s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=  12.2s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  24.8s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  37.3s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  36.6s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=  12.3s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  24.3s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  37.7s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  43.3s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=  14.0s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  28.4s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  42.8s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  41.1s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=  13.7s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  27.6s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  41.0s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  40.7s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=  13.0s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  26.4s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  39.5s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  38.8s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=  13.1s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  24.4s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  37.2s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  34.4s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=   8.8s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  16.7s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  25.6s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  25.1s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=   8.5s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  17.1s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   8.4s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=   8.6s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  17.0s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  24.9s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  24.9s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=   8.7s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  16.6s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   8.4s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=   8.9s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  16.3s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  25.0s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  16.0s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  24.6s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  25.4s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=  13.4s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  27.6s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=  14.1s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=  15.9s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  26.9s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  39.4s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  26.0s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=  12.9s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=  13.3s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  26.1s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  40.1s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  26.6s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=  12.3s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=  12.5s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  25.7s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  37.4s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  24.9s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=  12.9s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=  12.1s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  24.8s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  36.1s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  24.0s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=  14.5s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=  13.9s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  29.1s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  42.9s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  27.0s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=  14.1s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=  13.2s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  27.7s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  39.0s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  26.9s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=  14.3s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=  13.3s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  27.3s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  40.5s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  26.3s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=  12.6s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=  13.5s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  25.7s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  37.8s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  25.1s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=  12.8s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=  12.2s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  25.3s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  29.9s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=   8.5s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  25.7s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=   8.7s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  16.9s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=   8.8s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=   8.3s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  16.7s\n[CV] END max_depth=10, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  25.5s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  17.1s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=   8.3s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=   8.1s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  16.4s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  24.7s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  16.3s\n[CV] END max_depth=10, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  24.6s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  16.7s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=   8.6s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=   8.2s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  16.1s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  25.2s\n[CV] END max_depth=10, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  16.9s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=  13.4s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=  13.4s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  43.3s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=100; total time=  15.5s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=200; total time=  26.9s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  39.8s\n[CV] END max_depth=20, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  38.4s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=100; total time=  12.9s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=200; total time=  26.0s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  39.8s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  39.3s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=100; total time=  13.4s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=200; total time=  24.3s\n[CV] END max_depth=20, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  38.5s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  36.0s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=100; total time=  11.9s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=200; total time=  24.7s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  36.7s\n[CV] END max_depth=20, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  36.3s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=100; total time=  14.1s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=200; total time=  28.5s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=2, n_estimators=300; total time=  43.4s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=5, n_estimators=300; total time=  41.3s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=100; total time=  13.5s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=200; total time=  26.8s\n[CV] END max_depth=30, min_samples_leaf=1, min_samples_split=10, n_estimators=300; total time=  40.7s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=2, n_estimators=300; total time=  41.0s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=100; total time=  13.2s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=200; total time=  26.9s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=5, n_estimators=300; total time=  40.9s\n[CV] END max_depth=30, min_samples_leaf=2, min_samples_split=10, n_estimators=300; total time=  38.8s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=100; total time=  12.3s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=200; total time=  25.1s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=2, n_estimators=300; total time=  37.2s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=5, n_estimators=300; total time=  37.7s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=100; total time=  12.4s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=200; total time=  25.2s\n[CV] END max_depth=30, min_samples_leaf=4, min_samples_split=10, n_estimators=300; total time=  31.4s\n","output_type":"stream"}]}]}